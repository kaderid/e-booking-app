services:
  db:
    image: postgres:15
    container_name: ebooking_db
    environment:
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_pass
      POSTGRES_DB: e_booking
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking_user -d e_booking"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend/ebooking
      dockerfile: Dockerfile
    container_name: ebooking_backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/e_booking
      SPRING_DATASOURCE_USERNAME: booking_user
      SPRING_DATASOURCE_PASSWORD: booking_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: ebooking_frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    restart: always

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: ebooking_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ebooking.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - db
    restart: always

volumes:
  db_data:
